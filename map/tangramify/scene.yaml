scene:
    background: '#FFFFFF'

cameras:
    camera1:
        type: isometric

lights:
    tint:
        type: directional
        specular: [1,1,1]
        # ambient: [2.25,2.25,2.25]

sources:
    flips:
        type: GeoJSON
        url:  nyc_flips.geojson
    osm:
        type: TopoJSON
        url:  //vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-ORM3Whk

styles:
   elevator:
        base: polygons
        animated: true
        shaders:
            blocks:
                position: |
                    // Elevator buildings
                    if (position.z > 0.01) {
                        position.z *= (sin(position.z + u_time * 1.0) + 1.0);
                    }


layers:
    flip:
        data: { source: flips }
        draw:
            polygons:
                order: 50
                color: [1, 0, .7]
                # at z15, only extrude buildings at least 20 m tall; at z16 and higher, extrude everything
                extrude: function () { 
                        return true; 
                        feature.height = 100.0; //feature.AFTER_D_01 / 100;
                        }
                style: elevator
            # interactive: true
    earth:
        data: { source: osm, layer: earth }
        draw:
            polygons:
                order: 0
                color: [0.75, 0.75, 0.75]

    # landuse:
    #     data: { source: osm, layer: landuse }
    #     draw:
    #         polygons:
    #             order: 1
    #             color: [0.5, 0.875, 0.5]

    water:
        data: { source: osm, layer: water }
        draw:
            polygons:
                order: 2
                color: [1, 1, 1]
        outline:
            # only show outlines at z14 or higher
            filter: function () { return (feature.kind != 'ocean' && feature.kind != 'riverbank') && $zoom >= 14; }
            draw:
                lines:
                    color: [0.6, 0.6, 0.975]
                    width: function() {return (2.5 * Math.log($zoom));}

    roads:
        data: { source: osm, layer: roads }
        filter: { is_tunnel: no } # don't draw tunnels
        draw:
            lines:
                # separate roads by sort_key - this will take up a lot of order slots
                order: function () { return 3+(feature.sort_key); }
                color: [0.8, .8, .8]
                width: 8
                outline:
                    color: [0.2, 0.2, 0.2]
                    width: 2
        highway:
            filter: { kind: highway }
            draw:
                lines:
                    width: 10
                    outline:
                        color: [0.2, 0.2, 0.2]
                        width: 3
        major_road:
            filter: { kind: major_road }
            draw:
                lines:
                    width: 8
                    outline:
                        width: 1
        minor_road:
            filter: { kind: minor_road }
            draw:
                lines:
                    width: 5
                    outline:
                        width: 1
        path:
            filter: { kind: path }
            draw:
                lines:
                    width: 6
                    outline:
                        width: 1
        rail:
            filter: { kind: rail }

    buildings:
        data: { source: osm, layer: buildings }
        draw:
            polygons:
                # make sure buildings are on top of all the separated road layers
                order: 50
                color: [.7, .7, .3]
                # at z15, only extrude buildings at least 20 m tall; at z16 and higher, extrude everything
                # extrude: function () { return (($zoom >= 15 && feature.height > 20) || $zoom >= 16) }
